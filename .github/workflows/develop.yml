name: SonarCloud [Develop]
on:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  PostgreSQL:
    name: PostgreSQL
    runs-on: ubuntu-latest
    container: node:latest

      # service containers to run with `postgres-job`
      services:
        # label used to access the service container
        postgres:
          # Docker Hub image
          image: postgres:latest
          # service environment variables
          # `POSTGRES_HOST` is `postgres`
          env:
            # optional (defaults to `postgres`)
            POSTGRES_DB: pokemon-tcg-collections
            # required
            POSTGRES_PASSWORD: admin
            # optional (defaults to `5432`)
            POSTGRES_PORT: 5432
            # optional (defaults to `postgres`)
            POSTGRES_USER: postgres
          ports:
            # maps tcp port 5432 on service container to the host
            - 5432:5432
          # set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      steps:
        - name: Install PostgreSQL client
          run: |
            apt-get update
            apt-get install --yes postgresql-client

        # queries database with postgres client
        - name: Query database
          run: psql -h postgres -d pokemon-tcg-collections -U postgres -c 'SELECT 1;'
          env:
            PGPASSWORD: admin

  sonarCloud:
    name: SonarCloud Starting
    runs-on: ubuntu-latest
    if: ${{ always() }}
     needs: PostgreSQL
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=pokemon-tcg-collections -Dsonar.branch.name=develop -Dspring.profiles.active=test